<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.aning.meetingroomreservation.dao.IReservationDao">
    <resultMap id="map" type="com.aning.meetingroomreservation.entity.ReservationRecord">
        <id column="id" property="id" jdbcType="CHAR"/>
        <result column="ip" property="ip" jdbcType="CHAR"/>
        <result column="userId" property="userId" jdbcType="CHAR"/>
        <result column="meetingRoomId" property="meetingRoomId" jdbcType="CHAR"/>
        <result column="startTime" property="startTime" jdbcType="TIMESTAMP"/>
        <result column="endTime" property="endTime" jdbcType="TIMESTAMP"/>
        <result column="comments" property="comments" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="reserveTime" property="reserveTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <insert id="add" keyProperty="id" keyColumn="id">
        insert into ReservationRecord (id, ip, userId, meetingRoomId, startTime, endTime, comments, status, reserveTime)
        values (#{id}, #{ip}, #{userId}, #{meetingRoomId}, #{startTime}, #{endTime}, #{comments}, #{status}, #{reserveTime})
    </insert>

    <delete id="delete">
        delete from ReservationRecord
        where id = #{id}
    </delete>

    <update id="update">
        update ReservationRecord
        set ip = #{ip},
            userId = #{userId},
            meetingRoomId = #{meetingRoomId},
            startTime = #{startTime},
            endTime = #{endTime},
            comments = #{comments},
            status = #{status},
            reserveTime = #{reserveTime}
        where id = #{id}
    </update>

    <insert id="addOrUpdate">
        replace into ReservationRecord (id, ip, userId, meetingRoomId, startTime, endTime, comments, status, reserveTime)
        values (#{id}, #{ip}, #{userId}, #{meetingRoomId}, #{startTime}, #{endTime}, #{comments}, #{status}, #{reserveTime})
    </insert>

    <update id="updateList">
        update ReservationRecord set
        ip =
        <foreach collection="list" item="ReservationRecord" index="index" separator=" " open="case id" close="end">
            when #{ReservationRecord.id} then #{ReservationRecord.ip}
        </foreach>
        , userId =
        <foreach collection="list" item="ReservationRecord" index="index" separator=" " open="case id" close="end">
            when #{ReservationRecord.id} then #{ReservationRecord.userId}
        </foreach>
        , meetingRoomId =
        <foreach collection="list" item="ReservationRecord" index="index" separator=" " open="case id" close="end">
            when #{ReservationRecord.id} then #{ReservationRecord.meetingRoomId}
        </foreach>
        , startTime =
        <foreach collection="list" item="ReservationRecord" index="index" separator=" " open="case id" close="end">
            when #{ReservationRecord.id} then #{ReservationRecord.startTime}
        </foreach>
        , endTime =
        <foreach collection="list" item="ReservationRecord" index="index" separator=" " open="case id" close="end">
            when #{ReservationRecord.id} then #{ReservationRecord.endTime}
        </foreach>
        , comments =
        <foreach collection="list" item="ReservationRecord" index="index" separator=" " open="case id" close="end">
            when #{ReservationRecord.id} then #{ReservationRecord.comments}
        </foreach>
        , status =
        <foreach collection="list" item="ReservationRecord" index="index" separator=" " open="case id" close="end">
            when #{ReservationRecord.id} then #{ReservationRecord.status}
        </foreach>
        , reserveTime =
        <foreach collection="list" item="ReservationRecord" index="index" separator=" " open="case id" close="end">
            when #{ReservationRecord.id} then #{ReservationRecord.reserveTime}
        </foreach>
        where id in
        <foreach collection="list" item="ReservationRecord" index="index" separator="," open="(" close=")">
            #{ReservationRecord.id}
        </foreach>
    </update>

    <select id="getAll" resultMap="map">
        select * from ReservationRecord
    </select>

    <select id="getById" resultMap="map">
        select * from ReservationRecord
        where id = #{id}
    </select>

    <select id="getByUserId" resultMap="map">
        select * from ReservationRecord
        where userId = #{userId}
    </select>

    <select id="getByStatus" resultMap="map">
        select * from ReservationRecord
        where status = #{status}
    </select>

    <select id="getByStatusList" resultMap="map">
        select * from ReservationRecord
        where status in
        <foreach collection="list" item="status" index="index" open="(" close=")" separator=",">
            #{status}
        </foreach>
    </select>

    <select id="getByMeetingRoomId" resultMap="map">
        select * from ReservationRecord
        where meetingRoomId = #{meetingRoomId}
    </select>

    <select id="getByDateTime" resultMap="map">
        select * from ReservationRecord
        where #{start} &lt;= startTime and endTime &lt;= #{end}
    </select>

    <select id="getByMeetingRoomIdDateTime" resultMap="map">
        select * from ReservationRecord
        where meetingRoomId = #{meetingRoomId} and ( #{start} between startTime and endTime or #{end} between startTime and endTime)
    </select>
</mapper>